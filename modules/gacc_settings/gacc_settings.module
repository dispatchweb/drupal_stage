<?php

use Drupal\views\ViewExecutable;
use Drupal\views\Plugin\views\query\QueryPluginBase;
use Drupal\Core\Url;


function gacc_settings_views_query_alter(ViewExecutable $view, QueryPluginBase $query) {
  // make sure we're altering the correct view
  if ($view->storage->get('id') === 'national_and_gacc_preparedness_levels') {
    foreach ($query->where as &$condition_group) {
      // call helper function to recursively alter conditions
      _recursively_alter_query_conditions($condition_group['conditions']);
    }
  }
}

// helper function: (takes in conditions group argument)
function _recursively_alter_query_conditions(&$conditions) {
  // foreach condition in condition group
  foreach ($conditions as &$condition) {
    // if condition is itself a condition group
    if (isset($condition['field']) && is_a($condition['field'], 'Drupal\Core\Database\Query\Condition')) {
      // call the helper function on it
      _recursively_alter_query_conditions($condition['field']->conditions());
    }
    else {
      // check if we want to alter the condition and if so alter it
      _alter_query_condition($condition);
    }
  }
}

// separate helper function to determine if the condition is one we want to alter
function _alter_query_condition(&$condition) {
	$config = \Drupal::config('gacc_settings.settings');
	$code = $config->get('gacc_code');

  if (isset($condition['field']) && ($condition['field'] === 'preparedness_info__field_short_code.field_short_code_value')) {
    $condition['value'] = "%{$code}%";
    $condition['operator'] = 'LIKE';
  }
}

function gacc_settings_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id){
    //drupal_set_message($form_id);
    //get the current bg img info

    //add background image handling to the theme settings form
    if($form_id == 'system_theme_settings'){
        $url = Url::fromRoute('gacc_settings.admin_settings');
        $form['nextsteps'] = [
        '#type' => 'item',
        '#title' => t('Other Options'),
        '#markup' => \Drupal::l(t('Check here for your site background and short-code'),
                $url),
];
    }//end form_id check
    
}

/**
 * implements hook_cron
 * used to invoke drush command to get regular prep_level data updates from
 * remote URL
 */
function gacc_settings_cron(){
    exec('drush mi prep_level_importer --update');
}